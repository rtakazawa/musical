
const int buttonPin = 3;
const int trigPin = 9;
const int echoPin = 10;
const int buzzer = 2;
const int redPin = 7;
const int greenPin = 6;
const int bluePin = 5;
int buttonState = 0; //estado inicial del botón
int i = 0; //contabiliza el número de veces que se envía un mensaje

#include "pitches.h"
long duration;
int redAmount; //valor entre 0 y 255 del color
int greenAmount;
int blueAmount;
int distance;
int mode = 0;
int scale1[] = {
  NOTE_B0, NOTE_G3,  NOTE_A3,  NOTE_AS3, NOTE_D4,  NOTE_DS4, NOTE_FS4, NOTE_G4,  NOTE_A4,  NOTE_AS4, NOTE_D5,  NOTE_DS5, NOTE_FS5, NOTE_G5   
  //G hungarian minor scale 
};
int scale2[] = {
  NOTE_B0, NOTE_D3,  NOTE_F3,  NOTE_G3, NOTE_A3,  NOTE_C4, NOTE_D4, NOTE_E4,  NOTE_G4,  NOTE_A4, NOTE_B4,  NOTE_D5, NOTE_E5, NOTE_FS5,  NOTE_G5
  //C lydian scale
};
int scale3[] = {
  NOTE_C3, NOTE_D3,  NOTE_G3,  NOTE_C4, NOTE_D4,  NOTE_G4, NOTE_C5, NOTE_D5,  NOTE_G5,  NOTE_C6, NOTE_D6,  NOTE_G6, NOTE_C7, NOTE_D7,  NOTE_G7
  //C major 9th
};
void setup() {
pinMode(trigPin, OUTPUT);
pinMode(echoPin, INPUT);
pinMode(buzzer, OUTPUT);
pinMode(redPin, OUTPUT);
pinMode(greenPin, OUTPUT);
pinMode(bluePin, OUTPUT);
pinMode(buttonPin, INPUT);
Serial.begin(9600);
Serial.println("__________Theremin v0.1 por Rei Takazawa___________");
Serial.println("Presione botón rojo para comenzar.");
Serial.println(" ");

}
void loop() {
// Clears the trigPin
digitalWrite(trigPin, LOW);
delayMicroseconds(2);
// Sets the trigPin on HIGH state for 10 micro seconds
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin, LOW);
// Reads the echoPin, returns the sound wave travel time in microseconds
duration = pulseIn(echoPin, HIGH);
// Calculating the distance duration*0.034/2
distance= duration*0.034/4;
redAmount= 120+distance*9;
greenAmount= 0;
blueAmount= 255-distance*18;
 
buttonState = digitalRead(buttonPin);

if(buttonState == HIGH) {
  Serial.println(" ");
  Serial.println("Cambiando de escala...");
  int b;
  for (b=0; b< 3; b++) {
  setColor(0,255,0);
  delay(100);
  setColor(0,0,0);
  delay(100);
  }
  
  mode ++;
  i = 1;
  if(mode == 4){
    mode = 1;
  }
}
else
  switch(mode){

  case 1:
    while (i == 1){
      Serial.println("//Escala menor húngara//");
      i++;
    }
    if(distance <=13){

    tone(buzzer, scale1[distance]);
    delay(100);


    
    setColor(redAmount, 0, blueAmount);
    break;
    }
    else {
    noTone(buzzer);
    setColor(0, 0, 0);
    break;
    }
  
  case 2:
    while (i == 1){
      Serial.println("//Escala lidia//");
      i++;
    }
    if(distance <=14){

    tone(buzzer, scale2[distance]);
    delay(100);
    setColor(redAmount, 0, blueAmount);
    break;
    }
    else {
    noTone(buzzer);
    setColor(0, 0, 0);
    break;
    }
  case 3:
    while (i == 1){
      Serial.println("//Escala jónica, arpegio de novena//");
      i++;
    }
    if(distance <=14){

    tone(buzzer, scale3[distance]);
    delay(100);
    setColor(redAmount, 0, blueAmount);
    break;
    }
    else {
    noTone(buzzer);
    setColor(0, 0, 0);
    break;
    }
  }
}
  

void setColor(int red, int green, int blue){
  #ifdef COMMON_ANODE
    red = 255 - red;
    green = 255 - green;
    blue = 255 - blue;

  #endif
  analogWrite(redPin, red);
  analogWrite(greenPin, green);
  analogWrite(bluePin, blue);
}
